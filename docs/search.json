[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Time series Analysis",
    "section": "",
    "text": "What is a Time Series? A time series is any sequence of measurements taken at regular, equally spaced intervals—seconds, minutes, hours, days, months, quarters, or years. Common examples include weather (daily temperature or rainfall), financial markets (daily stock prices or returns), industry indicators (monthly production or sales), electricity demand, traffic counts, and hospital admissions. In time-series analysis we study how these values evolve: their level, trend, seasonal or calendar patterns (e.g., weekdays vs. weekends, holiday effects), cycles, and anomalies. Typical goals are to describe behavior clearly, forecast future values, and quantify the impact of events or policies.\nBecause observations are ordered in time, nearby points tend to be correlated (autocorrelation). This violates the independent-and-identically-distributed assumption behind many standard statistical methods, so naïve cross-sectional tools often mislead. Time-series work must explicitly handle dependence, trend, and seasonality—for example by differencing, seasonal adjustment, and models that use lagged values and errors (e.g., ARIMA/SARIMA, ARIMAX/SARIMAX with external drivers, VAR for multiple series, state-space/ETS, or GARCH when volatility changes over time). Analysts also watch for structural breaks (e.g., policy shifts, COVID), outliers, and missing periods, and they evaluate models with time-aware validation (rolling or blocked splits) rather than random shuffles."
  },
  {
    "objectID": "data/data_source.html",
    "href": "data/data_source.html",
    "title": "DATA SOURCES",
    "section": "",
    "text": "Data source 1: FX spot rate data (all four currencies)\nThese data are the day-to-day prices of the euro, pound, and yen against the U.S. dollar. They’re the core “what actually moved” series for this project. from these data, it is possible to observe trends and turning points, measure daily changes, and check how the big currencies move together over time.\nEuro data\nPound Sterling data\nJapanese Yen data\n\n\nData source 2: BIS data portal(effective exchange rate)\nInstead of looking at one pair(data source 1), these indices show how a currency is doing against a basket of trading partners (and, for REER, adjust for inflation). This data gives a more fair view of international competitiveness. It helps to connect currency moves to trade and make sure findings aren’t just about the dollar.\nBIS data\n\n\nData source 3: Yahoo finance\nyahoo finance\nyahoo finance is a great tool to get stock related data in easy way. for this project, yahoo finance data will be utilize by getting products related to currency-hedging and S&P500 ETFs.\n\n\nData source 4: trade data for US\nthis Dataset shows US international transaction in both import and export on goods and service. US has a largest market size, which assumes to be influential than any other country in terms of currency and trade relationship. this data will be helpful for trade and currecny anaylsis.\nus trade data\n\n\nData source 5: FRED data on WTI Crude Oil price\nthis dataset has crude oil price data. Oil is a global barometer that touches growth, inflation, and trade costs—especially relevant for Europe and Japan. By tracking oil, we can test whether energy shocks spill into currency moves (for example, whether sharp oil spikes push certain currencies up or down).\noil price data\n\n\nData source 6: VIX data\nthis dataset has a VIX data in verious assets such as gold, S&P500,options, oil,etc. VIX rises when investors are nervous. Watching it alongside currencies helps us see whether the dollar or yen tend to strengthen in stressful times. It’s a simple way to capture the risk mood of markets in our analysis.\nVIX data\n\n\nData source 7: Yield Curve\nthese data set are yield curve data for US,Japan,Uk and Euro.These are benchmark borrowing costs for each region in the short and long run. The gap between long and short period (“the slope”)(also depending on country maturity could be different) reflects expectations about growth and inflation. We use this to check whether the market’s outlook lines up with currency shifts.\nUS yield curve\njapan yield curve\nUK yield curve\neuro yield curve"
  },
  {
    "objectID": "introduction/introduction.html",
    "href": "introduction/introduction.html",
    "title": "Introduction",
    "section": "",
    "text": "Time series analyis on FX market and multi-asset portfolio\n1\nWe bump into exchange rates more often than we realize—when we travel, shop online from overseas retailers, or invest in foreign stocks and funds. An exchange rate is simply the price of one currency in terms of another, but that price ripples through everyday budgets and corporate balance sheets alike. In other words, FX sits at the seam between micro decisions (what a family pays for imports) and macro outcomes (inflation, trade balances, and monetary policy).\nThe foreign-exchange (FX) market is where those prices are set. It is a cornerstone of global finance not only because of its scale, but because it compresses a huge amount of information about growth prospects, interest-rate paths, and cross-border trade into a single number that moves every second. FX is also policy-relevant: shifts in exchange rates can tighten or loosen financial conditions, influence exporters’ competitiveness, and feed directly into inflation.\n\n\nBig picture\nThis project focuses on four widely used and highly influential currencies—the US dollar (USD), euro (EUR), British pound (GBP), and Japanese yen (JPY). These are not just FX workhorses; they also anchor activity in other markets like equities, bonds, commodities, and ETFs. When they move, portfolio returns, hedging costs, and corporate earnings move with them.\nGoal of this project is to study how these four exchange rates evolve over time and how they interact with the broader investment universe. Using a data-science approach—cleaning and aligning public time-series data, modeling seasonality and volatility, testing structural breaks—we will examine (i) how interest-rate differentials and yield-curve shifts map into FX returns, (ii) how trade and current-account dynamics shape medium-term trends, (iii) how equity stress, credit spreads, and oil shocks(gold) spill over into currencies, (iv) what investors gain or lose by hedging foreign-equity exposure, (v) who “leads” whom within the USD–EUR–GBP–JPY complex.\nBy the end, we aim to translate these signals into clear, practical guidance: when hedging tends to help, which risk states matter most, and how FX connects the dots between the real economy and financial markets.\n\n\n\nAnalytical Angels\n\nmajor currency in FX market : USD–EUR–GBP–JPY — See how the four big currencies move together, who leads, and when that changes.\nRates & Curves → Currency Moves — Test whether interest-rate gaps and bond-curve shape help - predict near-term currency moves.\nTrade & External Balances → FX — Remove regular seasonal patterns in trade data and check if changes line up with currency trends.\nCross-Asset Risk & Shock Transmission — Measure how stock sell-offs, credit stress, and oil swings spill over into currencies.\nEquity Exposure & Currency Hedging — Turn the insights into a simple rule for when hedging foreign stocks helps.\n\n\n\nGuiding Questions\n\nRates → FX: When do interest-rate differentials and yield-curve slopes (2y–10y) predict 1–3 month FX returns, and did those links change after 2020?\nTrade seasonality: Do seasonally adjusted moves in trade balances/current accounts lead medium-horizon FX trends, and are effects stronger around quarter-end?\nRisk-off behavior: In equity sell-offs and credit stress (VIX/MOVE up), which currency (USD/EUR/GBP/JPY) tends to appreciate most, and how long do those moves persist?\nOil shocks: Are FX responses to oil price spikes vs. drops asymmetric, and did the 2022 energy shock permanently alter EUR/GBP/JPY sensitivities?\nHedging payoff: Under what carry–volatility states do currency-hedged equity ETFs (e.g., HEZU, DXJ) outperform unhedged peers (EZU, EWJ), net of costs?\nHedge rule efficacy: Can a simple rule (e.g., hedge when carry is low and volatility is high) beat always-hedged or always-unhedged strategies out-of-sample?\nFour-currency leadership: In a USD–EUR–GBP–JPY system, who leads during regime shifts, and do cross-rates (EUR/GBP, EUR/JPY, GBP/JPY) add predictive information?\nEvent impacts: Around FOMC/ECB/BoE/BoJ meetings and major data (CPI/NFP/GDP), are abnormal FX returns statistically significant, and state-dependent (risk-on vs risk-off)?\nBreak alignment: Are breakpoints in FX–rates, FX–trade, and FX–risk linkages synchronized around 2020–2022, or are they asset-specific?\nModel value-add: Do regime-aware models (TVP, Markov-switching) deliver meaningful forecast gains over a random-walk at 1–3 month horizons across all three pairs?\n\n\n\nLiterature reviews\nResearch on currencies consistently finds they are hard to forecast in a stable, always-works way. Broad surveys show that many models do no better than a simple “no-change” guess and that any apparent pattern tends to come and go, depending on the period and the market backdrop2. For a practical time-series study of USD, EUR, GBP, and JPY, this means beginning with a clear picture of how these four move together over time, testing whether relationships are stable or shifting, and comparing every result to that simple benchmark so we don’t over-interpret noise.\nWhen we add economic context, studies show that interest rates do help, but their effect on exchange rates depends on market conditions. Rate gaps and the shape of bond yields matter because investors demand a changing “risk premium,” so the same rate difference can have different effects in calm vs. stressful periods3. On the real-economy side, newer work after 2020 highlights a financial channel: a stronger U.S. dollar can tighten global financing and slow non-U.S. trade, beyond textbook price effects. That suggests using monthly trade figures that are cleaned for seasonal patterns and also keeping an eye on indicators of financial tightness when relating trade to currency moves4.\nCurrencies also move with the wider market. Evidence since 2020 shows that oil-price uncertainty can ripple through stocks, bonds, and exchange rates, which encourages tracking how those connections strengthen or weaken over time and checking how currencies react after shocks such as an oil spike or an equity sell-off5. Finally, when turning findings into portfolio actions, research supports dynamic currency hedging—adjusting the hedge as conditions change—rather than a single, fixed rule, provided we keep trading costs and turnover in check; this approach is straightforward to test using widely available, investable funds6.\n\n\n\n\n\n\n\n\nReferences\n\n1. Currency photo, HowStuffWorks, money.howstuffworks.com/strongest-currency-in-the-world.htm.\n\n\n2. Rossi, B. Exchange rate predictability. Journal of Economic Literature 51, 1063–1119 (2013).\n\n\n3. Engel, C. Exchange rates, interest rates, and the risk premium. American Economic Review 106, 436–474 (2016).\n\n\n4. Ma, S. & Schmidt-Eisenlohr, T. The financial channel of the exchange rate and global trade. The Review of Financial Studies (2025) doi:10.1093/rfs/hhaf040.\n\n\n5. Lee, S. & Kim, Y. M. Volatility spillovers across financial markets: The role of oil price uncertainty. Applied Economics Letters 30, 2342–2347 (2022).\n\n\n6. Pagnottoni, P. & Spelta, A. Hedging global currency risk: A dynamic machine learning approach. Physica A: Statistical Mechanics and its Applications 649, 129948 (2024)."
  },
  {
    "objectID": "about/about_me.html",
    "href": "about/about_me.html",
    "title": "About me",
    "section": "",
    "text": "Welcome to my website!!\nHi my name is Zoo un Park and i am a second year student in the Data science and Analytics program at Georgetown University. Originally from Seoul, South Korea, I graduated from University of Minnesota-Twin Cities in 2024 with a B.A. in statistics and a minor in management from University of Minnesota in 2024."
  },
  {
    "objectID": "about/about_me.html#myself",
    "href": "about/about_me.html#myself",
    "title": "About me",
    "section": "",
    "text": "Welcome to my website!!\nHi my name is Zoo un Park and i am a second year student in the Data science and Analytics program at Georgetown University. Originally from Seoul, South Korea, I graduated from University of Minnesota-Twin Cities in 2024 with a B.A. in statistics and a minor in management from University of Minnesota in 2024."
  },
  {
    "objectID": "about/about_me.html#academic-interest",
    "href": "about/about_me.html#academic-interest",
    "title": "About me",
    "section": "Academic interest",
    "text": "Academic interest\n\nBaseball Analytics\nFinancial Analysis( specifically investment strategy)\nDeep learning\nReinforce learning"
  },
  {
    "objectID": "data_source/data_source.html",
    "href": "data_source/data_source.html",
    "title": "DATA SOURCES",
    "section": "",
    "text": "Data source 1: FX spot rate data (all four currencies)\nThese data are the day-to-day prices of the euro, pound, and yen against the U.S. dollar. They’re the core “what actually moved” series for this project. from these data, it is possible to observe trends and turning points, measure daily changes, and check how the big currencies move together over time.\nEuro data\nPound Sterling data\nJapanese Yen data\n\n\nData source 2: BIS data portal(effective exchange rate)\nInstead of looking at one pair(data source 1), these indices show how a currency is doing against a basket of trading partners (and, for REER, adjust for inflation). This data gives a more fair view of international competitiveness. It helps to connect currency moves to trade and make sure findings aren’t just about the dollar.\nBIS data\n\n\nData source 3: Yahoo finance\nyahoo finance\nyahoo finance is a great tool to get stock related data in easy way. for this project, yahoo finance data will be utilize by getting products related to currency-hedging and S&P500 ETFs.\n\n\nData source 4: trade data for US\nthis Dataset shows US international transaction in both import and export on goods and service. US has a largest market size, which assumes to be influential than any other country in terms of currency and trade relationship. this data will be helpful for trade and currecny anaylsis.\nus trade data\n\n\nData source 5: FRED data on WTI Crude Oil price\nthis dataset has crude oil price data. Oil is a global barometer that touches growth, inflation, and trade costs—especially relevant for Europe and Japan. By tracking oil, we can test whether energy shocks spill into currency moves (for example, whether sharp oil spikes push certain currencies up or down).\noil price data\n\n\nData source 6: VIX data\nthis dataset has a VIX data in verious assets such as gold, S&P500,options, oil,etc. VIX rises when investors are nervous. Watching it alongside currencies helps us see whether the dollar or yen tend to strengthen in stressful times. It’s a simple way to capture the risk mood of markets in our analysis.\nVIX data\n\n\nData source 7: Yield Curve\nthese data set are yield curve data for US,Japan,Uk and Euro.These are benchmark borrowing costs for each region in the short and long run. The gap between long and short period (“the slope”)(also depending on country maturity could be different) reflects expectations about growth and inflation. We use this to check whether the market’s outlook lines up with currency shifts.\nUS yield curve\njapan yield curve\nUK yield curve\neuro yield curve"
  },
  {
    "objectID": "data_viz/viz.html#fx-graphs-1",
    "href": "data_viz/viz.html#fx-graphs-1",
    "title": "Data Visualization",
    "section": "FX graphs",
    "text": "FX graphs"
  },
  {
    "objectID": "data_viz/viz.html",
    "href": "data_viz/viz.html",
    "title": "Data Visualization",
    "section": "",
    "text": "Code\nlibrary(readr)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(plotly)\nlibrary(ggplot2)\nlibrary(here)\nlibrary(lubridate)"
  },
  {
    "objectID": "data_viz/viz.html#yield-curve-for-four-countries",
    "href": "data_viz/viz.html#yield-curve-for-four-countries",
    "title": "Data Visualization",
    "section": "yield curve for four countries",
    "text": "yield curve for four countries\n\njapan yield curveUS yield curveeuro yield curveuk yield curve\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe yield curve plots for Japan, the U.S., the euro area, and the U.K. reveal how each economy experienced the global tightening cycle in its own way. In Japan, the 2Y and 10Y yields were held near zero for years under negative rates and yield curve control, leaving the curve unnaturally flat until 2023–24, when the BoJ began loosening its grip and long-term yields finally adjusted upward. In the U.S., rapid Fed hikes in 2022–23 drove the 2Y sharply higher, while the 10Y lagged, producing one of the deepest inversions in decades before signs of steepening emerged as growth expectations stabilized. The euro area saw the ECB raise rates later, with 2Y yields jumping in response, while the 10Y stayed more restrained due to weak growth prospects and sovereign debt sensitivities. In the U.K., yields reflected both high inflation and fiscal credibility: the 2Y surged with persistent inflation, while the 10Y showed episodes of market stress, most dramatically during the 2022 “mini-budget” crisis. Viewed together, these curves capture the common theme of inflation-driven tightening but also the distinct vulnerabilities and policy legacies shaping each market."
  },
  {
    "objectID": "data_viz/viz.html#spreads-for-four-countries",
    "href": "data_viz/viz.html#spreads-for-four-countries",
    "title": "Data Visualization",
    "section": "spreads for four countries",
    "text": "spreads for four countries\n\n\nCode\njp_plot &lt;- plot_ly(aligned, x = ~Date, y = ~JP_Spread, type = 'scatter', mode = 'lines',\n                   name = \"Japan (10Y-2Y)\") %&gt;%\n  layout(title = \"Japan Yield Curve Spread (10Y-2Y)\",\n         xaxis = list(title = \"Date\"),\n         yaxis = list(title = \"Spread (%)\"))\n\nus_plot &lt;- plot_ly(aligned, x = ~Date, y = ~US_Spread, type = 'scatter', mode = 'lines',\n                   name = \"US (10Y-2Y)\") %&gt;%\n  layout(title = \"US Yield Curve Spread (10Y-2Y)\",\n         xaxis = list(title = \"Date\"),\n         yaxis = list(title = \"Spread (%)\"))\n\neu_plot &lt;- plot_ly(aligned, x = ~Date, y = ~EU_Spread, type = 'scatter', mode = 'lines',\n                   name = \"Euro (10Y-2Y)\") %&gt;%\n  layout(title = \"Euro Yield Curve Spread (10Y-2Y)\",\n         xaxis = list(title = \"Date\"),\n         yaxis = list(title = \"Spread (%)\"))\n\nuk_plot &lt;- plot_ly(aligned, x = ~Date, y = ~UK_Spread, type = 'scatter', mode = 'lines',\n                   name = \"UK (10Y-2Y)\") %&gt;%\n  layout(title = \"UK Yield Curve Spread (10Y-2Y)\",\n         xaxis = list(title = \"Date\"),\n         yaxis = list(title = \"Spread (%)\"))\n\ncombined_plot &lt;- plot_ly(aligned, x = ~Date) %&gt;%\n  add_lines(y = ~JP_Spread, name = \"Japan (10Y-2Y)\") %&gt;%\n  add_lines(y = ~US_Spread, name = \"US (10Y-2Y)\") %&gt;%\n  add_lines(y = ~EU_Spread, name = \"Euro (10Y-2Y)\") %&gt;%\n  add_lines(y = ~UK_Spread, name = \"UK (10Y-2Y)\") %&gt;%\n  layout(title = \"Yield Curve Spreads(10 years vs 2 years) Over Time\",\n         xaxis = list(title = \"Date\"),\n         yaxis = list(title = \"Spread (%)\"))\n\ncombined_plot\n\n\n\n\n\n\nto the extent from government bond yield curve, this plot is a spread graph for 10years vs 2 years. The yield curve spread — the gap between long-term (10Y) and short-term (2Y) bond yields — condenses the full yield curve into a single, easy-to-read signal. Normally, the 10Y sits above the 2Y because investors demand compensation for lending further into the future. When the spread narrows or turns negative, it reflects either central banks driving short rates sharply higher or markets anticipating weaker growth ahead. For this reason, the 10Y–2Y spread is one of the most closely followed indicators of the business cycle.\nLinking back to the previous yield plots, the spread highlights in one line what was visible across four separate curves. In the U.S., rapid Fed hikes lifted 2Y yields above 10Y yields, creating a deep inversion in 2022–23 that matched the flattening shown in the U.S. yield curve panel. In the euro area, a later and milder tightening cycle kept inversions shallower, consistent with the weaker 10Y response seen earlier. In the U.K., spreads swung more violently, echoing the gilt turmoil of the 2022 mini-budget and the inflation-driven spikes visible in both ends of the curve. Meanwhile, Japan remained flat for decades under yield curve control, and only after 2023 did its spread widen modestly as the BoJ began dismantling its policy framework.\nBy compressing the story of the individual yield curves, the spread plot makes it easier to compare cycles across countries. It shows not only where each economy sits in the global tightening narrative, but also how quickly — or slowly — their policies allow the curve to invert and recover.\n\ndata cleaning & plot code for oil price,sp500 price, bitcoin price\n\n\nCode\n# oil price \noil_price &lt;- read_csv(here(\"data/oil\", \"crude_oil.csv\"))%&gt;%\n  rename(Date = observation_date, WTI = DCOILWTICO) %&gt;%\n  mutate(Date = as.Date(Date),\n         WTI = as.numeric(WTI))\n\noil_vix &lt;- read_csv(here(\"data/oil\",\"oil_vix.csv\"),\n                    col_names = c(\"Date\", \"OILVIX\"),\n                    skip = 1) %&gt;%\n  mutate(Date = as.Date(Date),\n         OILVIX = as.numeric(OILVIX))\n\n\noil_merged &lt;- inner_join(oil_price, oil_vix, by = \"Date\")\n\noil_plot &lt;- plot_ly(oil_merged, x = ~Date) %&gt;%\n  add_lines(y = ~WTI, name = \"WTI Crude oil(USD)\", line = list(color = \"green\")) %&gt;%\n  add_lines(y = ~OILVIX, name = \"Crude oil VIX\", yaxis = \"y2\", line = list(color = \"red\")) %&gt;%\n  layout(\n    title = \"WTI Crude Oil vs OIL VIX\",\n    yaxis = list(title = \"WTI Price (USD)\", side = \"left\"),\n    yaxis2 = list(title = \"OIL VIX\", overlaying = \"y\", side = \"right\"),\n    legend = list(x = 0.1, y = 0.7)\n  )\n\n\n\n\n# bitcoin price\n\nbtc &lt;- read_csv(\n  here(\"data/btc\", \"btc.csv\"),\n  skip = 2,\n  col_names = c(\"Date\",\"Open\",\"High\",\"Low\",\"Close\",\"AdjClose\",\"Volume\"),\n  col_types = cols(\n    Date = col_date(format = \"%Y-%m-%d\"),\n    Open = col_double(),\n    High = col_double(),\n    Low = col_double(),\n    Close = col_double(),\n    AdjClose = col_double(),\n    Volume = col_double()\n  )\n)\n\n\nbtc_vol &lt;- read_csv(here(\"data/btc\",\"btcvol.csv\")) %&gt;%\n  mutate(date = as.Date(date))\n\n\nbtc_all &lt;- inner_join(\n  btc %&gt;% select(Date, Close, Volume),\n  btc_vol %&gt;% select(date, price, volatility, volatility60),\n  by = c(\"Date\" = \"date\")\n)\n\n\nbtc_plot &lt;- plot_ly(btc_all, x = ~Date) %&gt;%\n  add_lines(y = ~price, name = \"BTC Price (USD)\", line = list(color = \"gold\"), yaxis = \"y1\") %&gt;%\n  add_lines(y = ~volatility, name = \"Daily Volatility\", line = list(color = \"red\", width = 1), yaxis = \"y2\") %&gt;%\n  add_lines(y = ~volatility60, name = \"60-day Volatility\", line = list(color = \"darksalmon\", width = 2), yaxis = \"y2\") %&gt;%\n  layout(\n    title = \"Bitcoin Price vs Volatility (Daily & 60-day)\",\n    yaxis = list(title = \"BTC Price (USD)\", type = \"log\"), \n    yaxis2 = list(title = \"Volatility\", overlaying = \"y\", side = \"right\"),\n    legend = list(x = 0.1, y = 0.9)\n  )\n\n\n\n# S&P 500 price\n\nsp500 &lt;- read_csv(\n  here(\"data/sp500\",\"sp500.csv\"),\n  skip = 1,\n  col_names = c(\"Date\",\"Open\",\"High\",\"Low\",\"Close\",\"AdjClose\",\"Volume\"),\n) %&gt;% slice(-1,-2)%&gt;%\n  mutate(Date = as.Date(Date))\n\n\nsp500_vix &lt;- read_csv(\n  here(\"data/sp500\",\"sp500_vix.csv\")\n) %&gt;%\n  mutate(Date = as.Date(DATE, format = \"%m/%d/%Y\")) %&gt;%\n  select(Date, VVIX)\n\nsp500_all &lt;- inner_join(\n  sp500 %&gt;% select(Date, Close),\n  sp500_vix,\n  by = \"Date\"\n)\n\n\nsp_plot &lt;- plot_ly(sp500_all, x = ~Date) %&gt;%\n  add_lines(y = ~Close, \n            name = \"S&P500 Index\", \n            line = list(color = \"blue\"), \n            yaxis = \"y1\") %&gt;%\n  add_lines(y = ~VVIX, \n            name = \"VVIX\", \n            line = list(color = \"red\"), \n            yaxis = \"y2\") %&gt;%\n  layout(\n    title = \"S&P500 Index vs VVIX\",\n    yaxis = list(title = \"S&P500 Index\", type = \"log\"),   \n    yaxis2 = list(title = \"VVIX\", overlaying = \"y\", side = \"right\"),\n    legend = list(x = 0.1, y = 0.9)\n  )\n\n\n\noil price & volatilitybtc price & volatilityS&P500 price & volatility\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOil prices and volatility (OILVIX) capture the most direct link between geopolitics, supply shocks, and inflation. Spikes in both price and volatility — such as during the 2022 energy shock following Russia’s invasion of Ukraine — fed directly into the inflation pressures that drove central banks to tighten policy, which we saw earlier in the steep climbs of 2Y yields. When oil trends higher with calmer volatility, it signals demand-led growth rather than supply stress, tying back to the more reflationary phases of the yield curves.\nThe S&P 500 vs. VVIX reflects how equity markets absorb those same cycles. Periods of rising policy rates and yield-curve inversions often coincide with weaker equity performance and elevated volatility-of-volatility, as investors hedge against uncertainty. Conversely, when the curve begins to steepen again — signaling expectations of easing — equities tend to recover and VVIX subsides. This makes equities a natural “mirror” to the fixed-income story told in the spread plot.\nFinally, Bitcoin and its volatility offer a high-beta, speculative lens on the same macro environment. Crypto tends to rally during periods of abundant liquidity and risk-on sentiment, but volatility spikes sharply around regime shifts, such as the 2024 halving event. Its behavior often amplifies what is seen in equities: confidence during easing cycles, stress during tightening phases.\nTogether, these three panels illustrate how macro forces traced through FX and yields cascade into commodities, equities, and crypto. Oil shapes inflation and policy responses, equities reflect growth expectations and investor sentiment, and Bitcoin amplifies the extremes of risk appetite. Read alongside the earlier plots, they complete the picture of how global shocks ripple across every corner of the financial system."
  },
  {
    "objectID": "data_viz/viz.html#yield-curve-for-four-countries-1",
    "href": "data_viz/viz.html#yield-curve-for-four-countries-1",
    "title": "Data Visualization",
    "section": "yield curve for four countries",
    "text": "yield curve for four countries\n\noil pricebitcoin priceS&P 500 price"
  },
  {
    "objectID": "data_viz/viz.html#exchange-rates",
    "href": "data_viz/viz.html#exchange-rates",
    "title": "Data Visualization",
    "section": "exchange rates",
    "text": "exchange rates\n                   \nUnderstanding how major currencies behave relative to the U.S. dollar is a key starting point. The first plot shows the direct exchange rates of the Japanese yen (JPY), the euro (EUR), and the British pound (GBP) against the U.S. dollar. Overall, the three currencies tend to follow broadly similar cycles, reflecting global macroeconomic conditions, though each retains its own distinct story tied to local policy and events."
  },
  {
    "objectID": "EDA/eda.html",
    "href": "EDA/eda.html",
    "title": "FX market in multi-asset portfolio analysis",
    "section": "",
    "text": "packages used\n\n\nCode\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(zoo)       \nlibrary(forecast)   \nlibrary(tseries)   \nlibrary(patchwork) \nlibrary(here)\nlibrary(plotly)\n\n\n\n\nTime series plot\n\nEUR/USD Exchange RateGBP/USD Exchange RateJPY/USD Exchange RateCrude oilS&P 500 indexBitcoinjapan yield spread (10years-2years)EU yield spread (10years-2years)UK yield spread (10years-2years)US yield spread (10years-2years)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nuk = read.csv(\"../data/fx rate/UK_US.csv\") \nuk &lt;- uk %&gt;% mutate(observation_date = as.Date(observation_date))%&gt;%\n  rename(UK_USD = DEXUSUK)%&gt;%\n  mutate(UK_USD = na.locf(UK_USD, na.rm = FALSE))\n\nuk_plot &lt;- ggplot(uk, aes(x = observation_date, y = UK_USD)) +\n  geom_line(color = \"blue\") +\n  labs(title = \"GBP/USD Exchange Rate\",\n       x = \"Date\", y = \"GBP(GBP per 1 USD)\") +\n  theme_minimal()\n\nuk_plot\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\njp &lt;- read_csv(\"../data/fx rate/JP_US.csv\") %&gt;%\n  mutate(observation_date = as.Date(observation_date)) %&gt;%\n  rename(JP_USD = DEXJPUS,\n         Date   = observation_date) %&gt;%\n  mutate( JP_USD = na.locf(JP_USD, na.rm = FALSE),\n          USD_JP = 1 / JP_USD)  \n\njp_plot &lt;- ggplot(jp, aes(x = Date, y = USD_JP)) +\n  geom_line(color = \"blue\") +\n  labs(title = \"JPY/USD Exchange Rate \",\n       x = \"Date\", y = \"JPY(JPY per 1 USD)\") +\n  theme_minimal()\n\njp_plot\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ncrude_oil &lt;- read_csv(here(\"data/oil\",\"oil_cleaned.csv\")) %&gt;%\n  mutate(Date = as.Date(Date)) %&gt;%\n  arrange(Date) %&gt;%\n  mutate(across(-Date, ~ na.locf(.x, na.rm = FALSE)))\n\nggplot(crude_oil, aes(x = Date, y = WTI)) +\n  geom_line(color = \"darkgreen\") +\n  labs(title = \"Crude Oil Prices\", x = \"Date\", y = \"Price\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nsp500 &lt;- read_csv(here(\"data/sp500\",\"sp500_cleaned.csv\")) %&gt;%\n  mutate(Date = as.Date(Date)) %&gt;%\n  arrange(Date) %&gt;%\n  mutate(across(-Date, ~ na.locf(.x, na.rm = FALSE)))\n\nggplot(sp500, aes(x = Date, y = Close)) +\n  geom_line(color = \"blue\") +\n  labs(title = \"S&P 500 Index\", x = \"Date\", y = \"Level\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nbtc &lt;- read_csv(here(\"data/btc\",\"btc_cleaned.csv\")) %&gt;%\n  mutate(Date = as.Date(Date)) %&gt;%\n  arrange(Date) %&gt;%\n  mutate(across(-Date, ~ na.locf(.x, na.rm = FALSE)))\n\nggplot(btc, aes(x = Date, y = Close)) +\n  geom_line(color = \"gold\") +\n  labs(title = \"Bitcoin Price\", x = \"Date\", y = \"Price\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nspread&lt;- read_csv(\"../data/yield/merge_yield.csv\")%&gt;%\nmutate(Date = as.Date(Date),\n         Year = lubridate::year(Date)) %&gt;%    \n  arrange(Date)%&gt;%\n  mutate(across(ends_with(\"_spread\"), ~ na.locf(.x, na.rm = FALSE))) %&gt;%\n  mutate(across(ends_with(\"_spread\"), ~ na.locf(.x, fromLast = TRUE)))\n\njp_plot &lt;- plot_ly(spread, x = ~Date, y = ~JP_Spread, type = 'scatter', mode = 'lines',\n                   name = \"Japan (10Y-2Y)\") %&gt;%\n  layout(title = \"Japan Yield Curve Spread (10Y-2Y)\",\n         xaxis = list(title = \"Date\"),\n         yaxis = list(title = \"Spread (%)\"))\njp_plot\n\n\n\n\n\n\n\n\n\n\nCode\nspread&lt;- read_csv(\"../data/yield/merge_yield.csv\")%&gt;%\nmutate(Date = as.Date(Date),\n         Year = lubridate::year(Date)) %&gt;%    \n  arrange(Date)%&gt;%\n  mutate(across(ends_with(\"_spread\"), ~ na.locf(.x, na.rm = FALSE))) %&gt;%\n  mutate(across(ends_with(\"_spread\"), ~ na.locf(.x, fromLast = TRUE)))\n\neu_plot &lt;- plot_ly(spread, x = ~Date, y = ~EU_Spread, type = 'scatter', mode = 'lines',\n                   name = \"EU (10Y-2Y)\") %&gt;%\n  layout(title = \"EU Yield Curve Spread (10Y-2Y)\",\n         xaxis = list(title = \"Date\"),\n         yaxis = list(title = \"Spread (%)\"))\neu_plot\n\n\n\n\n\n\n\n\n\n\nCode\nspread&lt;- read_csv(\"../data/yield/merge_yield.csv\")%&gt;%\nmutate(Date = as.Date(Date),\n         Year = lubridate::year(Date)) %&gt;%    \n  arrange(Date)%&gt;%\n  mutate(across(ends_with(\"_spread\"), ~ na.locf(.x, na.rm = FALSE))) %&gt;%\n  mutate(across(ends_with(\"_spread\"), ~ na.locf(.x, fromLast = TRUE)))\n\nuk_plot &lt;- plot_ly(spread, x = ~Date, y = ~UK_Spread, type = 'scatter', mode = 'lines',\n                   name = \"UK (10Y-2Y)\") %&gt;%\n  layout(title = \"UK Yield Curve Spread (10Y-2Y)\",\n         xaxis = list(title = \"Date\"),\n         yaxis = list(title = \"Spread (%)\"))\nuk_plot\n\n\n\n\n\n\n\n\n\n\nCode\nspread&lt;- read_csv(\"../data/yield/merge_yield.csv\")%&gt;%\nmutate(Date = as.Date(Date),\n         Year = lubridate::year(Date)) %&gt;%    \n  arrange(Date)%&gt;%\n  mutate(across(ends_with(\"_spread\"), ~ na.locf(.x, na.rm = FALSE))) %&gt;%\n  mutate(across(ends_with(\"_spread\"), ~ na.locf(.x, fromLast = TRUE)))\n\neu_plot &lt;- plot_ly(spread, x = ~Date, y = ~US_Spread, type = 'scatter', mode = 'lines',\n                   name = \"US (10Y-2Y)\") %&gt;%\n  layout(title = \"US Yield Curve Spread (10Y-2Y)\",\n         xaxis = list(title = \"Date\"),\n         yaxis = list(title = \"Spread (%)\"))\neu_plot\n\n\n\n\n\n\n\n\n\n\n\nLag plots\n\nJPY currency rateGBP currency rateEUR currency ratecrude oil priceS&P500 indexBitcoin priceJapan spread rateEuro spread rateUK spread rateUS spread rate\n\n\n\n\nCode\njp_ts &lt;- ts(jp$USD_JP, frequency = 252, start = c(year(min(jp$USD_JP))))\ngglagplot(jp_ts, do.lines=FALSE) +\n          xlab(\"Lags\")+ylab(\"JYP/USD\") \n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nuk_ts &lt;- ts(uk$UK_USD, frequency = 252, start = c(year(min(uk$UK_USD))))\ngglagplot(jp_ts, do.lines=FALSE) +\n          xlab(\"Lags\")+ylab(\"UK/USD\") \n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neu_ts &lt;- ts(eu$EUR_USD, frequency = 252, start = c(year(min(eu$EUR_USD))))\ngglagplot(jp_ts, do.lines=FALSE) +\n          xlab(\"Lags\")+ylab(\"EU/USD\") \n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ncrude_oil_ts &lt;- ts(crude_oil$WTI, frequency = 365, start = c(year(min(crude_oil$WTI))))\ngglagplot(jp_ts, do.lines=FALSE) +\n          xlab(\"Lags\")+ylab(\"Crude oil price\") \n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nsp500_ts &lt;- ts(sp500$Close, frequency = 252, start = c(year(min(sp500$Close))))\ngglagplot(jp_ts, do.lines=FALSE) +\n          xlab(\"Lags\")+ylab(\"S&P500 index \") \n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nbtc_ts &lt;- ts(btc$Close, frequency = 252, start = c(year(min(btc$Close))))\ngglagplot(jp_ts, do.lines=FALSE) +\n          xlab(\"Lags\")+ylab(\"Bitcoin price\") \n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\njp_spread_ts &lt;- ts(spread$JP_Spread, frequency = 252, start = c(year(min(spread$JP_Spread))))\n\ngglagplot(jp_spread_ts, do.lines = FALSE) +\n  labs(title = \"Lag Plots of japan_spread\",\n       x = \"Lags\", y = \"Japan spread %\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\neu_spread_ts &lt;- ts(spread$EU_Spread, frequency = 252, start = c(year(min(spread$EU_Spread))))\n\ngglagplot(eu_spread_ts, do.lines = FALSE) +\n  labs(title = \"Lag Plots of euro_spread\",\n       x = \"Lags\", y = \"Euro spread %\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nuk_spread_ts &lt;- ts(spread$UK_Spread, frequency = 252, start = c(year(min(spread$UK_Spread))))\n\ngglagplot(uk_spread_ts, do.lines = FALSE) +\n  labs(title = \"Lag Plots of UK_spread\",\n       x = \"Lags\", y = \"Uk spread %\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nus_spread_ts &lt;- ts(spread$US_Spread, frequency = 252, start = c(year(min(spread$US_Spread))))\n\ngglagplot(us_spread_ts, do.lines = FALSE) +\n  labs(title = \"Lag Plots of US_spread\",\n       x = \"Lags\", y = \"US spread %\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDecomposition\n\nJPY currency rateGBP currency rateEUR currency ratelag plot for crude oil priceS&P500 indexBitcoin priceJapan spread rateEuro spread rateUK spread rateUS spread rate\n\n\n\n\nCode\ndecompose_jp_ts &lt;- decompose(jp_ts)\nautoplot(decompose_jp_ts)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndecompose_uk_ts &lt;- decompose(uk_ts)\nautoplot(decompose_uk_ts)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndecompose_eu_ts &lt;- decompose(eu_ts)\nautoplot(decompose_eu_ts)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndecompose_oil_ts &lt;- decompose(crude_oil_ts)\nautoplot(decompose_oil_ts)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndecompose_sp500_ts &lt;- decompose(sp500_ts)\nautoplot(decompose_sp500_ts)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndecompose_btc_ts &lt;- decompose(btc_ts)\nautoplot(decompose_btc_ts)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndecompose_jp_spread_ts &lt;- decompose(jp_spread_ts)\nautoplot(decompose_jp_spread_ts)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndecompose_eu_spread_ts &lt;- decompose(eu_spread_ts)\nautoplot(decompose_eu_spread_ts)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndecompose_uk_spread_ts &lt;- decompose(uk_spread_ts)\nautoplot(decompose_uk_spread_ts)\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\ndecompose_us_spread_ts &lt;- decompose(us_spread_ts)\nautoplot(decompose_us_spread_ts)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nACF and PACF plots\n\nJPY currency rateGBP currency rateEUR currency rateCrude oil priceS&P500 indexBitcoin priceJapan spread rateEU spread rateUK spread rateUS spread rate\n\n\n\n\nCode\nggAcf(jp_ts) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"blue\") +\n  labs(title = \"ACF of JPY currency rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\nggPacf(jp_ts) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"red\") +\n  labs(title = \"PACF of JPY currency rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n#| echo: true\n#| code-fold: true\n\nggAcf(uk_ts) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"blue\") +\n  labs(title = \"ACF of GBP currency rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\nggPacf(uk_ts) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"red\") +\n  labs(title = \"PACF of GBP currency rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n#| echo: true\n#| code-fold: true\n\nggAcf(eu_ts) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"blue\") +\n  labs(title = \"ACF of EUR currency rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\nggPacf(eu_ts) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"red\") +\n  labs(title = \"PACF of EUR currency rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n#| echo: true\n#| code-fold: true\n\nggAcf(crude_oil_ts) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"blue\") +\n  labs(title = \"ACF of Crude Oil Price\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\nggPacf(crude_oil_ts) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"red\") +\n  labs(title = \"PACF of Crude Oil Price\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n#| echo: true\n#| code-fold: true\n\nggAcf(sp500_ts) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"blue\") +\n  labs(title = \"ACF of S&P500 Index\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\nggPacf(sp500_ts) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"red\") +\n  labs(title = \"PACF of S&P500 Index\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nggAcf(btc_ts) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"blue\") +\n  labs(title = \"ACF of Bitcoin Price\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\nggPacf(btc_ts) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"red\") +\n  labs(title = \"PACF of Bitcoin Price\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nggAcf(jp_spread_ts) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"blue\") +\n  labs(title = \"ACF of Japan Spread Rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\nggPacf(jp_spread_ts) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"red\") +\n  labs(title = \"PACF of Japan Spread Rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nggAcf(eu_spread_ts) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"blue\") +\n  labs(title = \"ACF of Euro Spread Rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\nggPacf(eu_spread_ts) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"red\") +\n  labs(title = \"PACF of Euro Spread Rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nggAcf(us_spread_ts) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"blue\") +\n  labs(title = \"ACF of US Spread Rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\nggPacf(us_spread_ts) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"red\") +\n  labs(title = \"PACF of US Spread Rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAugmented Dickey-Fuller Test\n\nJPY currency rateGBP currency rateEUR currency ratecrude oil priceS&P500 indexBitcoin priceJapan spread rateEuro spread rateUK spread rateUS spread rate\n\n\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  jp_ts\nDickey-Fuller = -1.3225, Lag order = 18, p-value = 0.8653\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(uk_ts)\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  uk_ts\nDickey-Fuller = -2.2011, Lag order = 18, p-value = 0.4932\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(eu_ts)\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  eu_ts\nDickey-Fuller = -2.1396, Lag order = 18, p-value = 0.5192\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(crude_oil_ts)\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  crude_oil_ts\nDickey-Fuller = -2.2326, Lag order = 13, p-value = 0.4799\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(sp500_ts)\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  sp500_ts\nDickey-Fuller = -1.4167, Lag order = 10, p-value = 0.8252\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(btc_ts)\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  btc_ts\nDickey-Fuller = -1.3955, Lag order = 15, p-value = 0.8343\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(jp_spread_ts)\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  jp_spread_ts\nDickey-Fuller = -2.2361, Lag order = 14, p-value = 0.4784\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(eu_spread_ts)\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  eu_spread_ts\nDickey-Fuller = -1.2324, Lag order = 14, p-value = 0.9013\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(uk_spread_ts)\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  uk_spread_ts\nDickey-Fuller = -1.1484, Lag order = 14, p-value = 0.9148\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(us_spread_ts)\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  us_spread_ts\nDickey-Fuller = -1.1226, Lag order = 14, p-value = 0.919\nalternative hypothesis: stationary\n\n\n\n\n\n\n\nDifferencing\n\nJPY currency rateGBP currency rateEUR currency rateCrude oil priceS&P500 indexBitcoin priceJapan spread rateEU spread rateUK spread rateUS spread rate\n\n\n\n\nCode\nggAcf(diff(log(jp_ts))) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"blue\") +\n  labs(title = \"ACF of JPY currency rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\nggPacf(diff(log(jp_ts))) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"red\") +\n  labs(title = \"PACF of JPY currency rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n#| echo: true\n#| code-fold: true\n\nggAcf(diff(log(uk_ts))) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"blue\") +\n  labs(title = \"ACF of GBP currency rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\nggPacf(diff(log(uk_ts))) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"red\") +\n  labs(title = \"PACF of GBP currency rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n#| echo: true\n#| code-fold: true\n\nggAcf(diff(log(eu_ts))) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"blue\") +\n  labs(title = \"ACF of GBP currency rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\nggPacf(diff(log(eu_ts))) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"red\") +\n  labs(title = \"PACF of GBP currency rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n#| echo: true\n#| code-fold: true\n\nggAcf(log(crude_oil_ts)) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"blue\") +\n  labs(title = \"ACF of Crude Oil Price\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\nggPacf(log(crude_oil_ts)) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"red\") +\n  labs(title = \"PACF of Crude Oil Price\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n#| echo: true\n#| code-fold: true\n\nggAcf(diff(log(sp500_ts))) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"blue\") +\n  labs(title = \"ACF of S&P500 Index\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\nggPacf(diff(log(sp500_ts))) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"red\") +\n  labs(title = \"PACF of S&P500 Index\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nggAcf(diff(log(btc_ts))) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"blue\") +\n  labs(title = \"ACF of Bitcoin Price\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\nggPacf(diff(log(btc_ts))) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"red\") +\n  labs(title = \"PACF of Bitcoin Price\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nggAcf(diff(jp_spread_ts)) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"blue\") +\n  labs(title = \"ACF of Japan Spread Rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\nggPacf(diff(jp_spread_ts)) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"red\") +\n  labs(title = \"PACF of Japan Spread Rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nggAcf(diff(eu_spread_ts)) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"blue\") +\n  labs(title = \"ACF of Euro Spread Rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\nggPacf(diff(eu_spread_ts)) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"red\") +\n  labs(title = \"PACF of Euro Spread Rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nggAcf(diff(us_spread_ts)) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"blue\") +\n  labs(title = \"ACF of US Spread Rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nCode\nggPacf(diff(uk_spread_ts)) +\n  geom_segment(aes(xend = lag, yend = 0), color=\"red\") +\n  labs(title = \"PACF of US Spread Rate\") +\n  theme_bw()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nADF test after differencing\n\nJPY currency rateGBP currency rateEUR currency ratecrude oil priceS&P500 indexBitcoin priceJapan spread rateEuro spread rateUK spread rateUS spread rate\n\n\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  diff(log(jp_ts))\nDickey-Fuller = -18.43, Lag order = 18, p-value = 0.01\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(diff(log(uk_ts)))\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  diff(log(uk_ts))\nDickey-Fuller = -18.859, Lag order = 18, p-value = 0.01\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(diff(log(eu_ts)))\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  diff(log(eu_ts))\nDickey-Fuller = -18.245, Lag order = 18, p-value = 0.01\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(diff(crude_oil_ts))\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  diff(crude_oil_ts)\nDickey-Fuller = -15.053, Lag order = 13, p-value = 0.01\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(diff(log(sp500_ts)))\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  diff(log(sp500_ts))\nDickey-Fuller = -11.132, Lag order = 10, p-value = 0.01\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(diff(log(btc_ts)))\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  diff(log(btc_ts))\nDickey-Fuller = -14.791, Lag order = 15, p-value = 0.01\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(diff(jp_spread_ts))\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  diff(jp_spread_ts)\nDickey-Fuller = -14.815, Lag order = 14, p-value = 0.01\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(diff(eu_spread_ts))\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  diff(eu_spread_ts)\nDickey-Fuller = -15.106, Lag order = 14, p-value = 0.01\nalternative hypothesis: stationary\n\n\n\n\n\n\nCode\nadf.test(diff(uk_spread_ts))\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  diff(uk_spread_ts)\nDickey-Fuller = -13.881, Lag order = 14, p-value = 0.01\nalternative hypothesis: stationary\n\n\n\n\n\n\n\n    Augmented Dickey-Fuller Test\n\ndata:  diff(us_spread_ts)\nDickey-Fuller = -13.978, Lag order = 14, p-value = 0.01\nalternative hypothesis: stationary\n\n\n\n\n\n\n\nMoving average\n\nJPY currency rateGBP currency rateEUR currency ratecrude oil priceS&P500 indexBitcoin priceJapan spread rateEuro spread rateUK spread rateUS spread rate\n\n\n\n\nCode\njp_df &lt;- data.frame(Date = time(jp_ts), Value = as.numeric(jp_ts))\njp_df$MA20 &lt;- rollmean(jp_df$Value, 20, fill = NA, align = \"right\")\njp_df$MA50 &lt;- rollmean(jp_df$Value, 50, fill = NA, align = \"right\")\njp_df$MA100 &lt;- rollmean(jp_df$Value, 100, fill = NA, align = \"right\")\n\nplot_ly(jp_df, x = ~Date) %&gt;%\n  add_lines(y = ~Value, name = \"JPY Rate\", line = list(color = \"black\")) %&gt;%\n  add_lines(y = ~MA20, name = \"MA20\", line = list(color = \"blue\")) %&gt;%\n  add_lines(y = ~MA50, name = \"MA50\", line = list(color = \"red\")) %&gt;%\n  add_lines(y = ~MA100, name = \"MA100\", line = list(color = \"green\")) %&gt;%\n  layout(title = \"JPY Currency Rate with Moving Averages\",\n         xaxis = list(title = \"Date\"),\n         yaxis = list(title = \"JPY rate\"))\n\n\n\n\n\n\n\n\n\n\nCode\nuk_df &lt;- data.frame(Date = time(uk_ts), Value = as.numeric(uk_ts))\nuk_df$MA20 &lt;- rollmean(uk_df$Value, 20, fill = NA, align = \"right\")\nuk_df$MA50 &lt;- rollmean(uk_df$Value, 50, fill = NA, align = \"right\")\nuk_df$MA100 &lt;- rollmean(uk_df$Value, 100, fill = NA, align = \"right\")\n\nplot_ly(uk_df, x = ~Date) %&gt;%\n  add_lines(y = ~Value, name = \"GBP Rate\", line = list(color = \"black\")) %&gt;%\n  add_lines(y = ~MA20, name = \"MA20\", line = list(color = \"blue\")) %&gt;%\n  add_lines(y = ~MA50, name = \"MA50\", line = list(color = \"red\")) %&gt;%\n  add_lines(y = ~MA100, name = \"MA100\", line = list(color = \"green\")) %&gt;%\n  layout(title = \"GBP Currency Rate with Moving Averages\",\n         xaxis = list(title = \"Date\"),\n         yaxis = list(title = \"GBP rate\"))\n\n\n\n\n\n\n\n\n\n\nCode\neu_df &lt;- data.frame(Date = time(eu_ts), Value = as.numeric(eu_ts))\neu_df$MA20 &lt;- rollmean(eu_df$Value, 20, fill = NA, align = \"right\")\neu_df$MA50 &lt;- rollmean(eu_df$Value, 50, fill = NA, align = \"right\")\neu_df$MA100 &lt;- rollmean(eu_df$Value, 100, fill = NA, align = \"right\")\n\nplot_ly(eu_df, x = ~Date) %&gt;%\n  add_lines(y = ~Value, name = \"EUR Rate\", line = list(color = \"black\")) %&gt;%\n  add_lines(y = ~MA20, name = \"MA20\", line = list(color = \"blue\")) %&gt;%\n  add_lines(y = ~MA50, name = \"MA50\", line = list(color = \"red\")) %&gt;%\n  add_lines(y = ~MA100, name = \"MA100\", line = list(color = \"green\")) %&gt;%\n  layout(title = \"EUR Currency Rate with Moving Averages\",\n         xaxis = list(title = \"Date\"),\n         yaxis = list(title = \"EUR rate\"))\n\n\n\n\n\n\n\n\n\n\nCode\noil_df &lt;- data.frame(Date = time(crude_oil_ts), Value = as.numeric(crude_oil_ts))\noil_df$MA20 &lt;- rollmean(oil_df$Value, 20, fill = NA, align = \"right\")\noil_df$MA50 &lt;- rollmean(oil_df$Value, 50, fill = NA, align = \"right\")\noil_df$MA100 &lt;- rollmean(oil_df$Value, 100, fill = NA, align = \"right\")\n\nplot_ly(oil_df, x = ~Date) %&gt;%\n  add_lines(y = ~Value, name = \"Oil Price\", line = list(color = \"black\")) %&gt;%\n  add_lines(y = ~MA20, name = \"MA20\", line = list(color = \"blue\")) %&gt;%\n  add_lines(y = ~MA50, name = \"MA50\", line = list(color = \"red\")) %&gt;%\n  add_lines(y = ~MA100, name = \"MA100\", line = list(color = \"green\")) %&gt;%\n  layout(title = \"Crude Oil Price with Moving Averages\",\n         xaxis = list(title = \"Date\"),\n         yaxis = list(title = \"Oil Price\"))\n\n\n\n\n\n\n\n\n\n\nCode\nsp500_df &lt;- data.frame(Date = time(sp500_ts), Value = as.numeric(sp500_ts))\nsp500_df$MA20 &lt;- rollmean(sp500_df$Value, 20, fill = NA, align = \"right\")\nsp500_df$MA50 &lt;- rollmean(sp500_df$Value, 50, fill = NA, align = \"right\")\nsp500_df$MA100 &lt;- rollmean(sp500_df$Value, 100, fill = NA, align = \"right\")\n\nplot_ly(sp500_df, x = ~Date) %&gt;%\n  add_lines(y = ~Value, name = \"S&P500\", line = list(color = \"black\")) %&gt;%\n  add_lines(y = ~MA20, name = \"MA20\", line = list(color = \"blue\")) %&gt;%\n  add_lines(y = ~MA50, name = \"MA50\", line = list(color = \"red\")) %&gt;%\n  add_lines(y = ~MA100, name = \"MA100\", line = list(color = \"green\")) %&gt;%\n  layout(title = \"S&P500 Index with Moving Averages\",\n         xaxis = list(title = \"Date\"),\n         yaxis = list(title = \"S&P500\"))\n\n\n\n\n\n\n\n\n\n\nCode\nbtc_df &lt;- data.frame(Date = time(btc_ts), Value = as.numeric(btc_ts))\nbtc_df$MA20 &lt;- rollmean(btc_df$Value, 20, fill = NA, align = \"right\")\nbtc_df$MA50 &lt;- rollmean(btc_df$Value, 50, fill = NA, align = \"right\")\nbtc_df$MA100 &lt;- rollmean(btc_df$Value, 100, fill = NA, align = \"right\")\n\nplot_ly(btc_df, x = ~Date) %&gt;%\n  add_lines(y = ~Value, name = \"BTC Price\", line = list(color = \"black\")) %&gt;%\n  add_lines(y = ~MA20, name = \"MA20\", line = list(color = \"blue\")) %&gt;%\n  add_lines(y = ~MA50, name = \"MA50\", line = list(color = \"red\")) %&gt;%\n  add_lines(y = ~MA100, name = \"MA100\", line = list(color = \"green\")) %&gt;%\n  layout(title = \"Bitcoin Price with Moving Averages\",\n         xaxis = list(title = \"Date\"),\n         yaxis = list(title = \"BTC Price\"))\n\n\n\n\n\n\n\n\n\n\nCode\njp_spread_df &lt;- data.frame(Date = time(jp_spread_ts), Value = as.numeric(jp_spread_ts))\njp_spread_df$MA20 &lt;- rollmean(jp_spread_df$Value, 20, fill = NA, align = \"right\")\njp_spread_df$MA50 &lt;- rollmean(jp_spread_df$Value, 50, fill = NA, align = \"right\")\njp_spread_df$MA100 &lt;- rollmean(jp_spread_df$Value, 100, fill = NA, align = \"right\")\n\nplot_ly(jp_spread_df, x = ~Date) %&gt;%\n  add_lines(y = ~Value, name = \"JP Spread\", line = list(color = \"black\")) %&gt;%\n  add_lines(y = ~MA20, name = \"MA20\", line = list(color = \"blue\")) %&gt;%\n  add_lines(y = ~MA50, name = \"MA50\", line = list(color = \"red\")) %&gt;%\n  add_lines(y = ~MA100, name = \"MA100\", line = list(color = \"green\")) %&gt;%\n  layout(title = \"Japan Spread with Moving Averages\",\n         xaxis = list(title = \"Date\"),\n         yaxis = list(title = \"Spread (bps)\"))\n\n\n\n\n\n\n\n\n\n\nCode\neu_spread_df &lt;- data.frame(Date = time(eu_spread_ts), Value = as.numeric(eu_spread_ts))\neu_spread_df$MA20 &lt;- rollmean(eu_spread_df$Value, 20, fill = NA, align = \"right\")\neu_spread_df$MA50 &lt;- rollmean(eu_spread_df$Value, 50, fill = NA, align = \"right\")\neu_spread_df$MA100 &lt;- rollmean(eu_spread_df$Value, 100, fill = NA, align = \"right\")\n\nplot_ly(eu_spread_df, x = ~Date) %&gt;%\n  add_lines(y = ~Value, name = \"EU Spread\", line = list(color = \"black\")) %&gt;%\n  add_lines(y = ~MA20, name = \"MA20\", line = list(color = \"blue\")) %&gt;%\n  add_lines(y = ~MA50, name = \"MA50\", line = list(color = \"red\")) %&gt;%\n  add_lines(y = ~MA100, name = \"MA100\", line = list(color = \"green\")) %&gt;%\n  layout(title = \"Euro Spread with Moving Averages\",\n         xaxis = list(title = \"Date\"),\n         yaxis = list(title = \"Spread (bps)\"))\n\n\n\n\n\n\n\n\n\n\nCode\nuk_spread_df &lt;- data.frame(Date = time(uk_spread_ts), Value = as.numeric(uk_spread_ts))\nuk_spread_df$MA20 &lt;- rollmean(uk_spread_df$Value, 20, fill = NA, align = \"right\")\nuk_spread_df$MA50 &lt;- rollmean(uk_spread_df$Value, 50, fill = NA, align = \"right\")\nuk_spread_df$MA100 &lt;- rollmean(uk_spread_df$Value, 100, fill = NA, align = \"right\")\n\nplot_ly(uk_spread_df, x = ~Date) %&gt;%\n  add_lines(y = ~Value, name = \"UK Spread\", line = list(color = \"black\")) %&gt;%\n  add_lines(y = ~MA20, name = \"MA20\", line = list(color = \"blue\")) %&gt;%\n  add_lines(y = ~MA50, name = \"MA50\", line = list(color = \"red\")) %&gt;%\n  add_lines(y = ~MA100, name = \"MA100\", line = list(color = \"green\")) %&gt;%\n  layout(title = \"UK Spread with Moving Averages\",\n         xaxis = list(title = \"Date\"),\n         yaxis = list(title = \"Spread (bps)\"))\n\n\n\n\n\n\n\n\n\n\nCode\nus_spread_df &lt;- data.frame(Date = time(us_spread_ts), Value = as.numeric(us_spread_ts))\nus_spread_df$MA20 &lt;- rollmean(us_spread_df$Value, 20, fill = NA, align = \"right\")\nus_spread_df$MA50 &lt;- rollmean(us_spread_df$Value, 50, fill = NA, align = \"right\")\nus_spread_df$MA100 &lt;- rollmean(us_spread_df$Value, 100, fill = NA, align = \"right\")\n\nplot_ly(us_spread_df, x = ~Date) %&gt;%\n  add_lines(y = ~Value, name = \"US Spread\", line = list(color = \"black\")) %&gt;%\n  add_lines(y = ~MA20, name = \"MA20\", line = list(color = \"blue\")) %&gt;%\n  add_lines(y = ~MA50, name = \"MA50\", line = list(color = \"red\")) %&gt;%\n  add_lines(y = ~MA100, name = \"MA100\", line = list(color = \"green\")) %&gt;%\n  layout(title = \"US Spread with Moving Averages\",\n         xaxis = list(title = \"Date\"),\n         yaxis = list(title = \"Spread (bps)\"))"
  }
]